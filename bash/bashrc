#
# ~/.bashrc
#

[[ $- != *i* ]] && return

# System OS name
sysOS=$(uname -s)

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

###############################################################################
colors() {
  local fgc bgc vals seq0

  printf "Color escapes are %s\n" '\e[${value};...;${value}m'
  printf "Values 30..37 are \e[33mforeground colors\e[m\n"
  printf "Values 40..47 are \e[43mbackground colors\e[m\n"
  printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

  # foreground colors
  for fgc in {30..37}; do
    # background colors
    for bgc in {40..47}; do
      fgc=${fgc#37} # white
      bgc=${bgc#40} # black

      vals="${fgc:+$fgc;}${bgc}"
      vals=${vals%%;}

      seq0="${vals:+\e[${vals}m}"
      printf "  %-9s" "${seq0:-(default)}"
      printf " ${seq0}TEXT\e[m"
      printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
    done
    echo; echo
  done
}

#
# # cl - cd and list
# # usage: cl <directory>
cl() {
  if [ -d $1 ]; then
    cd $1
    ls
  else
    echo "bash: cl: $1: Directory not found"
  fi
}

#
# # ex - archive extractor
# # usage: ex <file>
extract ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

findgrep() { # find | grep
if [ $# -eq 0 ]; then
  echo "findgrep: No arguments entered."
    return 1
else
  # "{.[a-zA-Z],}*" instead of "." makes the output cleaner
  find {.[a-zA-Z],}* -type f | xargs grep -n $* /dev/null \
  2>/dev/null
fi
}
###############################################################################

[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion

# Change the window title of X terminals
case ${TERM} in
	xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|interix|konsole*)
		PS1='\[\e[0;31m\]\u@\h [\A]\[\e[m\] \[\e[1;34m\]\w\[\e[m\] \[\e[0;31m\]^_^\[\e[m\]\[\e[0;32m\]\n-> '
		;;
	screen*)
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
		;;
esac

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
	# Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
	if type -P dircolors >/dev/null ; then
		if [[ -f ~/.dir_colors ]] ; then
			eval $(dircolors -b ~/.dir_colors)
		elif [[ -f /etc/DIR_COLORS ]] ; then
			eval $(dircolors -b /etc/DIR_COLORS)
		fi
	fi

	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
else
	if [[ ${EUID} == 0 ]] ; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi

unset use_color safe_term match_lhs sh

# Customized for differnt OS
if [ $sysOS == 'Darwin' ]; then
  # For macOS bash settings.
  # Pos 1,dir; 2,symbolic link; 3,socket; 4,pipe; 5,exe; 6,block special; 7, character; 8,exe with
  # setuid; 9,exe with setgid bit set; 10,dir write to others, with sticky bit; 11,dir w to others,
  # without sticky bit
  # a,黑色; b,红色; c,绿色; d,棕色; e,蓝色; f,洋红色; g,青色; h,浅灰色; A,黑粗; B,红粗; C,绿粗;
  # D,棕粗; E,蓝粗; F,洋红粗; G,黄粗; H,浅灰粗; x,default.
  export LS_OPTIONS='--color=auto'         # 如果没有指定，则自动选择颜色
  export CLICOLOR='Yes'                    # 是否输出颜色
  export LSCOLORS='ExGxFxdaCxDaDahbadacec' # 指定颜色
  # Use coreutils to promote color display when type different commands
  # Also this command would let option at the end of every command.
  # Usage : gdircolors --print-database > ~/.dir_colors
  if brew list | grep coreutils >/dev/null; then
    PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"
    alias ls='ls -G --color=auto'
    eval $(gdircolors -b $HOME/.dir_colors)
  fi
  export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
fi

alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias np='nano -w PKGBUILD'
alias more=less
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias cindex='ctags -I __THROW -I __THROWNL -I __nonnull -R --c-kinds=+p --fields=+iaS --extra=+q'
# Add an "alert" alias for long running commands.  Use like so:
# sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias vi='vim'
alias em='emacs'
alias g='git'
alias tmux="TERM=screen-256color-bce tmux"
alias e='extract'
alias fg='findgrep'

xhost +local:root > /dev/null 2>&1

complete -cf sudo

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize

shopt -s expand_aliases

# export QT_SELECT=4

# Enable history appending instead of overwriting.  #139609
shopt -s histappend

ulimit -c unlimited

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
# if [ -f ~/.bash_aliases ]; then
#   source ~/.bash_aliases
# fi

[ -f ~/.bash_aliases ] && source ~/.bash_aliases

# Specified my local soft Envroment
export PATH=$HOME/tool_chain/bin:${PATH}
export LD_LIBRARY_PATH=$HOME/tool_chain/lib:${LD_LIBRARY_PATH}

[ -x /bin/zsh ] && zsh
